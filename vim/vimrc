""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Global 
" => Bundle  
    "Plugin 'gmarik/Vundle.vim'
    "Plugin 'Valloric/YouCompleteMe'
    "Plugin 'Tabular'
    "Plugin 'a.vim'
    "Plugin 'The-NERD-tree'
    "Plugin 'The-NERD-Commenter'
    "Plugin 'taglist.vim'
    "Plugin 'Tagbar'
    "Plugin 'c.vim'
    "Plugin 'EasyMotion'
" => VIM user interface
" => Colors and Fonts
" => Text, tab and indent related
" => Moving around, tabs, windows and buffers
" => Misc


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Global 
"ctags -I __THROW -I __attribute_pure__ -I __nonnull -I __attribute__ --file-scope=yes --langmap=c:+.h --languages=c,c++ --links=yes --c-kinds=+p --c++-kinds=+p --fields=+iaS --extra=+q  -f ~/.vim/systags /usr/include/* /usr/include/sys/* /usr/include/bits/*  /usr/include/netinet/* /usr/include/arpa/* /usr/include/mysql/* /usr/include/x86_64-linux-gnu/bits/* /usr/include/x86_64-linux-gnu/sys/*
"map <F8> :!ctags -R –c++-kinds=+p –fields=+iaS –extra=+q .<CR>
set tags+=../tags,./tags,~/.vim/systags
set path+=/root/2.1/vp_kit/,/usr/include,/usr/include/x86_64-linux-gnu/,/usr/local/include,

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","

" :W sudo saves the file 
" (useful for handling the permission-denied error)
command W w !sudo tee % > /dev/null

"Ignore compiled files
set wildignore=*.o,*~,*.pyc,.git/*,.hg/*,.svn/*


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Bundle  
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" color theme
Plugin 'altercation/vim-colors-solarized'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 自动补全
Plugin 'Valloric/YouCompleteMe'
"让Vim的补全菜单行为与一般IDE一致
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
"回车即选中当前项
inoremap <expr> <CR>       pumvisible() ? "\<C-y>" : "\<CR>"    
"上下左右键的行为 会显示其他信息
inoremap <expr> <Down>     pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Up>       pumvisible() ? "\<C-p>" : "\<Up>"
inoremap <expr> <PageDown> pumvisible() ? "\<PageDown>\<C-p>\<C-n>" : "\<PageDown>"
inoremap <expr> <PageUp>   pumvisible() ? "\<PageUp>\<C-p>\<C-n>" : "\<PageUp>"

"youcompleteme  默认tab  s-tab 和自动补全冲突
"let g:ycm_key_list_select_completion=['<c-n>']
"let g:ycm_key_list_select_completion = ['<Down>']
"let g:ycm_key_list_previous_completion=['<c-p>']
"let g:ycm_key_list_previous_completion = ['<Up>']

"关闭加载.ycm_extra_conf.py提示
let g:ycm_confirm_extra_conf=0
" 开启 YCM 基于标签引擎
let g:ycm_collect_identifiers_from_tags_files=1 
" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_cache_omnifunc=0  
" 语法关键字补全
let g:ycm_seed_identifiers_with_syntax=1    
let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '>*'
" 跳转到定义处
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR> 
"open locationlist
"nnoremap <leader>lo :lopen<CR> 
"close locationlist
"nnoremap <leader>lc :lclose<CR>    

"在注释输入中也能补全
let g:ycm_complete_in_comments = 1
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Tabular :[range] Tabluarize /{char1}参照char1对齐文本
"for code alignment
Plugin 'Tabular'
" <leader>bb 按=号对齐代码 
nmap <leader>bb :Tab /=<CR>
" <leader>bn 自定义对齐    
nmap <leader>bn :Tab /

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"a.vim  :A 切换.c/.h
Plugin 'a.vim'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"NERDTree :NERDTree  目录列表
Plugin 'The-NERD-tree'
nmap <leader>nt :NERDTree<cr>:set rnu<cr>
let NERDTreeShowBookmarks=1
let NERDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeShowLineNumbers=1
let NERDTreeWinPos=1
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"NERD_commenter 注释代码
Plugin 'The-NERD-Commenter'


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"taglist :Tlist  函数列表
Plugin 'taglist.vim'
" :Tlist  调用TagList 打开Taglist/TxtBrowser窗口
nmap <leader>tl :Tlist<CR><c-l>                
let Tlist_Show_One_File        = 1             " 只显示当前文件的tags
let Tlist_Exit_OnlyWindow      = 1             " 如果Taglist窗口是最后一个窗口则退出Vim
let Tlist_Use_Right_Window     = 1             " 在右侧窗口中显示
let Tlist_File_Fold_Auto_Close = 1             " 自动折叠


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Tagbar标签导航
Plugin 'Tagbar'
nmap <leader>tb :TagbarToggle<CR>  " ,tb 打开tagbar窗口
let g:tagbar_autofocus = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"C语言快捷编辑工具"
Plugin 'c.vim'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"快速移动
Plugin 'EasyMotion'

" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'

" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"允许未保存切换buffer 隐藏buff
set hidden

"可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
"set mouse=a
"set selection=exclusive
"set selectmode=mouse,key 

"复制之前的缩进
set copyindent

" Set to auto read when a file is changed from the outside
set autoread

"显示行号
set number

"Always show current position
set ruler

"Height of the command bar
set cmdheight=2

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=b,s,<,>,[,],h,l

"带有如下符号的单词不要换行分割
set iskeyword+=_,$,@,%,#,-

" Ignore case when searching
" set ignorecase

" When searching try to be smart about cases 
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch

"匹配括号的规则，增加针对html的<>
set matchpairs=(:),{:},[:],<:>

" No annoying sound on errors
set noerrorbells
set novisualbell

" Add a bit extra margin to the left
set foldcolumn=1

"在处理未保存或只读文件的时候，弹出确认
set confirm

"设置光标高亮显示
"set cursorline
"set cursorcolumn

"光标移动到buffer的顶部和底部时保持3行距离
set scrolloff=3 

" Always show the status line
set laststatus=2
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}:%{&fenc!=''?&fenc:&enc}]\ [TYPE=%Y]\ [ROW=%03l/%L(%p%%)]\ [COL=%03v]

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
" Enable syntax highlighting
syntax enable 

"Set utf8 as standard encoding 
"en_US as the standard language

set encoding=utf-8        "vim 内部使用的编码方式
set termencoding=utf-8    "用于屏幕显示
set langmenu=zh_CN.UTF-8
set helplang=cn
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set fenc=utf-8

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
" Use spaces instead of tabs, 1 tab == 4 spaces
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Linebreak on 500 characters
set lbr
set tw=500

"自动换行
set wrap
set cindent
set autoindent
set smartindent 

"字符间插入的像素数目
set linespace=0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around, tabs, windows and buffers
" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Smart way to move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Misc
"代码折叠
set foldenable
set foldmethod=manual

" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

" Switch CWD to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>:pwd<cr>

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

" Remember info about open buffers on close
set viminfo^=%

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

